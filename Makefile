config.h:
	echo '/* Default config.h generated by Makefile */' > $@
	echo '#define HAVE_LIBBZ2 1' >> $@
	echo '#define HAVE_LIBLZMA 1' >> $@
	echo '#ifndef __APPLE__' >> $@
	echo '#define HAVE_LZMA_H 1' >> $@
	echo '#endif' >> $@
	echo '#define HAVE_DRAND48 1' >> $@
	echo '#define HAVE_LIBCURL 1' >> $@


# $@ The file name of the target of the rule. If the target is an archive member, then ‘$@’ is the name of the archive file. In a pattern rule that has multiple targets (see Introduction to Pattern Rules), ‘$@’ is the name of whichever target caused the rule's recipe to be run.
# $< The name of the first prerequisite. If the target got its recipe from an implicit rule, this will be the first prerequisite added by the implicit rule (see Implicit Rules).

%.o : %.c
	$(CC) $(CFLAGS) -I. $(CPPFLAGS) -c -o $@ $<

%.pico: %.c
	$(CC) $(CFLAGS) -I. $(CPPFLAGS) $(EXTRA_CFLAGS_PIC) -c -o $@ $<


# lib-static: config.h

# kstring.o: kstring.c config.h $(htslib_kstring_h)
# kstring.o kstring.pico: kstring.c config.h $(htslib_kstring_h)
kstring.o kstring.pico: config.h kstring.c $(htslib_kstring_h)
kstring_a.o kstring_a.pico: config.h kstring_a.c $(htslib_kstring_h)
kstring_b.o kstring_b.pico: config.h kstring.c $(htslib_kstring_h)

all: config.h kstring.o kstring.pico
clean: ; rm -f *.o *.pico

# % : RCS/%.v
# 	$(CO) $(COFLAGS) $<

%:;
	touch $(basename $@).undefined

# PACKAGE_VERSION := $(shell ./version.sh)

# version.h: $(if $(wildcard version.h),$(if $(findstring "$(PACKAGE_VERSION)",$(shell cat version.h)),,force))

# version.h:
# 	echo '#define HTS_VERSION_TEXT "$(PACKAGE_VERSION)"' > $@
