
from luck.types import DNS,DNSUB,DelayedNameSpace
# from luck.types import Rule
from luck.types import RuleNameSpace
from luck.types import RuleNameSpace as RNS
from luck.types import LSC
from luck.types import MakefilePattern, AutoCmd
from luck.types import NoCacheRule
from attrdict import AttrDict

from path import Path
Path(__file__).dirname().chdir()


CC = "gcc"
AR = "ar"
RANLIB = "ranlib"

CPPFLAGS = ""
CFLAGS   = "-g -Wall -O2 -fvisibility=hidden"
EXTRA_CFLAGS_PIC = "-fpic"
LDFLAGS  = "-fvisibility=hidden"


patterns = DNSUB('Patterns')
patterns[0] =  MakefilePattern('%.o : %.c',   
	lambda x: LSC(f'{CC} -I. -c {CFLAGS} {CPPFLAGS} -c -o {x.outputs[0]} {x.inputs[0]}'))
patterns[1] = MakefilePattern( '%.pico : %.c', 
	lambda x: LSC(f'{CC} {CFLAGS} -I. {CPPFLAGS} {EXTRA_CFLAGS_PIC} -c -o {x.outputs[0]} {x.inputs[0]}'))


ns = RNS.subclass('MainRuleNameSpace')(ruleFactory=NoCacheRule)
'kstring.o kstring.pico: kstring.c config.h $(htslib_kstring_h)'

ns['kstring.o kstring.pico'] = (lambda: f'kstring.c config.h',  AutoCmd(patterns))
ns['config.h'] = ('', lambda c: LSC(f'''
	{{
	 echo '/* Default config.h generated by Makefile */' 
	echo '#define HA0VE_LIBBZ2 1'
	echo '#define HAVE_LIBLZMA 1' 
	echo '#ifndef __APPLE__' 
	echo '#define HAVE_LZMA_H 1' 
	echo '#endif'  
	}} > {c.o[0]}
	'''))
ns['kstring.c'] = None
